# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import grpctest.HelloService_pb2 as HelloService__pb2


class HelloServiceStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
        """Constructor.

        Args:
          channel: A grpc.Channel.
        """
        self.sayHi1 = channel.unary_unary(
            '/grpctest.HelloService/sayHi1',
            request_serializer=HelloService__pb2.Params.SerializeToString,
            response_deserializer=HelloService__pb2.Result.FromString,
        )
        self.sayHi2 = channel.stream_unary(
            '/grpctest.HelloService/sayHi2',
            request_serializer=HelloService__pb2.Params.SerializeToString,
            response_deserializer=HelloService__pb2.Result.FromString,
        )
        self.sayHi3 = channel.unary_stream(
            '/grpctest.HelloService/sayHi3',
            request_serializer=HelloService__pb2.Params.SerializeToString,
            response_deserializer=HelloService__pb2.Result.FromString,
        )
        self.sayHi4 = channel.stream_stream(
            '/grpctest.HelloService/sayHi4',
            request_serializer=HelloService__pb2.Params.SerializeToString,
            response_deserializer=HelloService__pb2.Result.FromString,
        )


class HelloServiceServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def sayHi1(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sayHi2(self, request_iterator, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sayHi3(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sayHi4(self, request_iterator, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HelloServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'sayHi1': grpc.unary_unary_rpc_method_handler(
            servicer.sayHi1,
            request_deserializer=HelloService__pb2.Params.FromString,
            response_serializer=HelloService__pb2.Result.SerializeToString,
        ),
        'sayHi2': grpc.stream_unary_rpc_method_handler(
            servicer.sayHi2,
            request_deserializer=HelloService__pb2.Params.FromString,
            response_serializer=HelloService__pb2.Result.SerializeToString,
        ),
        'sayHi3': grpc.unary_stream_rpc_method_handler(
            servicer.sayHi3,
            request_deserializer=HelloService__pb2.Params.FromString,
            response_serializer=HelloService__pb2.Result.SerializeToString,
        ),
        'sayHi4': grpc.stream_stream_rpc_method_handler(
            servicer.sayHi4,
            request_deserializer=HelloService__pb2.Params.FromString,
            response_serializer=HelloService__pb2.Result.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'grpctest.HelloService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
